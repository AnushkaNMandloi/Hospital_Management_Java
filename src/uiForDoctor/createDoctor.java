/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package uiForDoctor;

import Directories.CommunityDirectory;
import uiForPatient.*;
import Directories.DoctorDirectory;
import Directories.EncounterHistory;
import Directories.HospitalDirectory;
import Directories.PatientDirectory;
import Directories.PersonDirectory;
import assignment.pkg2.Validations;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import smallClasses.City;
import smallClasses.Doctor;
import smallClasses.Encounter;
import smallClasses.House;
import smallClasses.Patient;
import smallClasses.VitalSigns;

/**
 *
 * @author anush
 */
public class createDoctor extends javax.swing.JPanel {

    /**
     * Creates new form createPatient
     */
    DoctorDirectory doctorList;
    PatientDirectory patientList;
    PersonDirectory personList;
    HospitalDirectory hospitalList;
    CommunityDirectory communityDirectory;
    EncounterHistory encounterhistory;
    Validations v;
    //Patient p;
    
//    public createPatient(){
//        initComponents();
//        
//        //p = new Patient();
//    }
//    
    public createDoctor(DoctorDirectory doctorList, PatientDirectory patientList, PersonDirectory personList, HospitalDirectory hospitalList, CommunityDirectory communityDirectory, EncounterHistory encounterhistory){
        initComponents();
        this.doctorList = doctorList;
        this.patientList = patientList;
        this.personList = personList;
        this.hospitalList = hospitalList;
        this.communityDirectory = communityDirectory;
        this.encounterhistory = encounterhistory;
        v = new Validations();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        doctorName = new javax.swing.JTextField();
        doctorEmail = new javax.swing.JTextField();
        doctorPassword = new javax.swing.JTextField();
        doctorNumber = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        doctorGender = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        doctorAptNo = new javax.swing.JTextField();
        doctorBuilding = new javax.swing.JTextField();
        doctorStreet = new javax.swing.JTextField();
        doctorCommunityCode = new javax.swing.JTextField();
        doctorCity = new javax.swing.JTextField();
        doctorState = new javax.swing.JTextField();
        doctorCountry = new javax.swing.JTextField();
        doctorPersonType = new javax.swing.JComboBox<>();
        doctorBirthdate = new com.toedter.calendar.JDateChooser();
        addDoctorButton = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        doctorType = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        doctorVitalSign = new javax.swing.JTextField();

        setBackground(new java.awt.Color(102, 102, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Enter Doctor Details");

        jLabel2.setText("Name");

        jLabel3.setText("Person Type");

        jLabel4.setText("Email");

        jLabel5.setText("Password");

        jLabel6.setText("Phone Number");

        jLabel7.setText("Birthdate");

        jLabel8.setText("Apartment Number");

        jLabel9.setText("Building Name");

        jLabel10.setText("Street");

        jLabel11.setText("Community Code");

        jLabel12.setText("City");

        jLabel13.setText("State");

        jLabel14.setText("Gender");

        doctorGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Trans", "Other" }));

        jLabel15.setText("Country");

        doctorCommunityCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorCommunityCodeActionPerformed(evt);
            }
        });

        doctorState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorStateActionPerformed(evt);
            }
        });

        doctorPersonType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Patient", "Doctor" }));

        addDoctorButton.setBackground(new java.awt.Color(204, 204, 255));
        addDoctorButton.setText("Add Doctor");
        addDoctorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDoctorButtonActionPerformed(evt);
            }
        });

        jLabel16.setText("Doctor Type");

        jLabel17.setText("Vital Sign");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(347, 347, 347))
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(doctorEmail, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(doctorNumber, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(doctorName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(doctorPassword)
                    .addComponent(doctorGender, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(doctorPersonType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(doctorBirthdate, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                    .addComponent(doctorType))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(doctorAptNo)
                    .addComponent(doctorBuilding)
                    .addComponent(doctorStreet)
                    .addComponent(doctorCommunityCode)
                    .addComponent(doctorCity)
                    .addComponent(doctorState)
                    .addComponent(doctorCountry, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                    .addComponent(doctorVitalSign))
                .addGap(75, 75, 75))
            .addGroup(layout.createSequentialGroup()
                .addGap(369, 369, 369)
                .addComponent(addDoctorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(doctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9)
                            .addComponent(doctorBuilding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(doctorPersonType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(doctorEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(doctorGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(doctorCommunityCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(doctorPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel12)
                            .addComponent(doctorCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(doctorNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(doctorState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(jLabel15)
                                .addComponent(doctorCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(doctorBirthdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(doctorAptNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(doctorStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(doctorType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doctorVitalSign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addDoctorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void doctorCommunityCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorCommunityCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorCommunityCodeActionPerformed

    private void doctorStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorStateActionPerformed

    private void addDoctorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDoctorButtonActionPerformed
        // TODO add your handling code here:
       try{ 
           
        if (doctorName.getText() == null
                    || doctorAptNo.getText() == null
                    || doctorBuilding.getText() == null
                    || doctorStreet.getText() == null
                    || doctorBirthdate.getDate() == null
                    || doctorCommunityCode.getText() == null
                    || doctorCity.getText() == null
                    || doctorState.getText() == null
                    || doctorCountry.getText() == null
                    || doctorPassword == null
                    || doctorEmail == null) {
                JOptionPane.showMessageDialog(this, "Enter the details");
                return;
            }

            String birthDate;
            //Long phoneNumber = 99999999;
            House house;
            City city = new City();
            city.setCityName(doctorCity.getText());
            Encounter encounter = new Encounter();
            VitalSigns vitalsign = new VitalSigns();
            vitalsign.setName("");
            encounter.setVitalSign(vitalsign);
            encounter.setDate(null);

            

            if (v.isValidName(doctorName.getText())) {
                System.out.println("correct name");
            } else {
                //patientName.requestFocus();
                doctorName.setText("");
                System.out.println("name incorrect");
            }
            if (v.isValidEmail(doctorEmail.getText())) {
                System.out.println("correct email");
            } else {
                //patientName.requestFocus();
                doctorEmail.setText("");
                System.out.println("email incorrect");
            }
            if (v.isValidPhoneNumber(doctorNumber.getText())) {
                System.out.println("correct number");
                //phoneNumber = Long.parseLong(patientNumber.getText());
            } else {
                //patientName.requestFocus();
                doctorNumber.setText("");
                System.out.println("number incorrect");
            }
            if (v.onlyDigits(doctorAptNo.getText())) {
                System.out.println("correct aptno");
            } else {
                //patientName.requestFocus();
                doctorAptNo.setText("");
                System.out.println("aptno incorrect");
            }
            if (v.isValidString(doctorBuilding.getText())) {
                System.out.println("correct building name");
            } else {
                //patientName.requestFocus();
                doctorBuilding.setText("");
                System.out.println("building name incorrect");
            }
            if (v.isValidString(doctorStreet.getText())) {
                System.out.println("correct street name");
            } else {
                //patientName.requestFocus();
                doctorStreet.setText("");
                System.out.println("street name incorrect");
            }
            if (v.isValidString(doctorState.getText())) {
                System.out.println("correct state name");
            } else {
                //patientName.requestFocus();
                doctorState.setText("");
                System.out.println("state name incorrect");
            }
            if (v.isValidString(doctorCountry.getText())) {
                System.out.println("correct country name");
            } else {
                //patientName.requestFocus();
                doctorCountry.setText("");
                System.out.println("country name incorrect");
            }
            if(v.isValidCommunityCode(doctorCommunityCode.getText())){
                System.out.println("correct community code");
            } else {
                //patientName.requestFocus();
                doctorCommunityCode.setText("");
                System.out.println("community code incorrect");
            }
            if(v.isValidString(doctorCity.getText())){
                System.out.println("correct city");
            } else {
                //patientName.requestFocus();
                doctorCity.setText("");
                System.out.println("city incorrect");
            }
            //add into doctor data
            if(v.isValidString(doctorType.getText())){
                System.out.println("correct doctor type");
            } else {
                //patientName.requestFocus();
                doctorType.setText("");
                System.out.println("doctor type incorrect");
            }
            if(v.isValidString(doctorVitalSign.getText())){
                System.out.println("correct vital sign");
            } else {
                //patientName.requestFocus();
                doctorVitalSign.setText("");
                System.out.println("viital sign incorrect");
            }
            //personType = patientPersonType.getSelectedItem().toString();
            //if (isValidaptno(patientNumber.getText())) {
            //} else {
            //   JOptionPane.showMessageDialog(this, "Enter correct details");
            //   patientNumber.setText("");
            // }
            //int communityCode = Integer.parseInt(patientCommunityCode.getText());
            SimpleDateFormat sdf = new SimpleDateFormat("mm-dd-yyyy");
            birthDate = sdf.format(doctorBirthdate.getDate());

            if (v.isValidName(doctorName.getText())
                    && v.isValidEmail(doctorEmail.getText())
                    && v.isValidPhoneNumber(doctorNumber.getText())
                    && v.onlyDigits(doctorAptNo.getText())
                    && v.isValidString(doctorBuilding.getText())
                    && v.isValidString(doctorStreet.getText())
                    && v.isValidString(doctorState.getText())
                    && v.isValidString(doctorCountry.getText())
                    && v.isValidCommunityCode(doctorCommunityCode.getText())
                    && v.isValidString(doctorCity.getText())
                    && v.isValidString(doctorType.getText())
                    && v.isValidString(doctorVitalSign.getText())) {
            house = new House(doctorAptNo.getText(), doctorBuilding.getText(), doctorStreet.getText(), Integer.parseInt(doctorCommunityCode.getText()), city, doctorState.getText(), doctorCountry.getText());

            //Patient patient = new Patient(personId, name, gender, personType, email, password, phoneNumber, birthDate, house, patientId);
            Doctor d = doctorList.addNewDoctor();

            d.setId(v.getRandomNumber());
            d.setDoctorId(v.getRandomNumber());
            d.setName(doctorName.getText());
            d.setGender(doctorGender.getSelectedItem().toString());
            d.setPersonType("patient");
            d.setEmail(doctorEmail.getText());
            d.setPassword(doctorPassword.getText());
            d.setPhone_number(Long.parseLong(doctorNumber.getText()));
            d.setBirthDate(birthDate);
            d.setHouse(house);
            d.setDoctorType(doctorType.getText());
            //p.setPatientId(patientId);
            JOptionPane.showMessageDialog(this, "Record Saved!");
            } else {
                JOptionPane.showMessageDialog(this, "Enter correct details");
            }
       }
       catch(Exception e){
           System.out.println(e);
       }
        //patientList.addNewPatient(p);
    }//GEN-LAST:event_addDoctorButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDoctorButton;
    private javax.swing.JTextField doctorAptNo;
    private com.toedter.calendar.JDateChooser doctorBirthdate;
    private javax.swing.JTextField doctorBuilding;
    private javax.swing.JTextField doctorCity;
    private javax.swing.JTextField doctorCommunityCode;
    private javax.swing.JTextField doctorCountry;
    private javax.swing.JTextField doctorEmail;
    private javax.swing.JComboBox<String> doctorGender;
    private javax.swing.JTextField doctorName;
    private javax.swing.JTextField doctorNumber;
    private javax.swing.JTextField doctorPassword;
    private javax.swing.JComboBox<String> doctorPersonType;
    private javax.swing.JTextField doctorState;
    private javax.swing.JTextField doctorStreet;
    private javax.swing.JTextField doctorType;
    private javax.swing.JTextField doctorVitalSign;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
