/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package CommunityLogin;

import Directories.CommunityDirectory;
import Directories.DoctorDirectory;
import Directories.EncounterHistory;
import Directories.HospitalDirectory;
import Directories.PatientDirectory;
import Directories.PersonDirectory;
import assignment.pkg2.Validations;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import smallClasses.Community;

/**
 *
 * @author anush
 */
public class viewSearchCommunity extends javax.swing.JPanel {

    /**
     * Creates new form viewSearchCommunity
     */
    DoctorDirectory doctorList;
    PatientDirectory patientList;
    PersonDirectory personList;
    HospitalDirectory hospitalList;
    EncounterHistory encounterHistory;
    CommunityDirectory communityDirectory;
    EncounterHistory encounterhistory;
    Validations v;
    
    public viewSearchCommunity() {
        initComponents();
        populateData();
    }
    
    public viewSearchCommunity(DoctorDirectory doctorList, PatientDirectory patientList, PersonDirectory personList, HospitalDirectory hospitalList, CommunityDirectory communityDirectory, EncounterHistory encounterhistory){
        initComponents();
        this.doctorList = doctorList;
        this.patientList = patientList;
        this.personList = personList;
        this.hospitalList = hospitalList;
        this.communityDirectory = communityDirectory;
        this.encounterHistory = encounterhistory;
        v = new Validations();
        populateData();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchCommunity = new javax.swing.JButton();
        deleteCommunity = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        communityTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(102, 102, 255));

        searchCommunity.setBackground(new java.awt.Color(204, 204, 255));
        searchCommunity.setText("Search");
        searchCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCommunityActionPerformed(evt);
            }
        });

        deleteCommunity.setBackground(new java.awt.Color(204, 204, 255));
        deleteCommunity.setText("Delete");
        deleteCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCommunityActionPerformed(evt);
            }
        });

        communityTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Community Code", "City", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(communityTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(deleteCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(141, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(86, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCommunityActionPerformed
        // TODO add your handling code here:
        String sf = searchField.getText();
        Search(sf);
    }//GEN-LAST:event_searchCommunityActionPerformed

    private void deleteCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCommunityActionPerformed
        // TODO add your handling code here:
        if((communityTable.getSelectionModel().isSelectionEmpty())){
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        int rowIndex = communityTable.getSelectedRow();
        if(rowIndex <0){
            JOptionPane.showMessageDialog(this, "Select a row to delete");
            return;
        }
        System.out.println(communityDirectory.getLength());
        DefaultTableModel model = (DefaultTableModel)communityTable.getModel();
        communityDirectory.deleteCommunity(rowIndex);
        populateData();
    }//GEN-LAST:event_deleteCommunityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable communityTable;
    private javax.swing.JButton deleteCommunity;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchCommunity;
    private javax.swing.JTextField searchField;
    // End of variables declaration//GEN-END:variables

    private void populateData() {
        DefaultTableModel model = (DefaultTableModel) communityTable.getModel();
        model.setRowCount(0);
        for (Community entry : communityDirectory.getData()) {

            Object[] row = new Object[3];
            row[0] = entry.getCommunityCode();
            row[1] = entry.getCity().getCityName();
            row[2] = entry.getPassword();
            model.addRow(row);
        }
    }
    
     public void Search(String str){
        DefaultTableModel model = (DefaultTableModel) communityTable.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        communityTable.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
    }
}
